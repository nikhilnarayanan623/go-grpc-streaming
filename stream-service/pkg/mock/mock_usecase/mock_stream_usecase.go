// Code generated by MockGen. DO NOT EDIT.
// Source: ./pkg/usecase/interfaces/stream.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	context "context"
	reflect "reflect"
	request "stream-service/pkg/models/request"

	gomock "github.com/golang/mock/gomock"
)

// MockStreamUseCase is a mock of StreamUseCase interface.
type MockStreamUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockStreamUseCaseMockRecorder
}

// MockStreamUseCaseMockRecorder is the mock recorder for MockStreamUseCase.
type MockStreamUseCaseMockRecorder struct {
	mock *MockStreamUseCase
}

// NewMockStreamUseCase creates a new mock instance.
func NewMockStreamUseCase(ctrl *gomock.Controller) *MockStreamUseCase {
	mock := &MockStreamUseCase{ctrl: ctrl}
	mock.recorder = &MockStreamUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStreamUseCase) EXPECT() *MockStreamUseCaseMockRecorder {
	return m.recorder
}

// UploadFileAsStream mocks base method.
func (m *MockStreamUseCase) UploadFileAsStream(ctx context.Context, id string, dataChan <-chan []byte, errChan chan error) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UploadFileAsStream", ctx, id, dataChan, errChan)
}

// UploadFileAsStream indicates an expected call of UploadFileAsStream.
func (mr *MockStreamUseCaseMockRecorder) UploadFileAsStream(ctx, id, dataChan, errChan interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFileAsStream", reflect.TypeOf((*MockStreamUseCase)(nil).UploadFileAsStream), ctx, id, dataChan, errChan)
}

// UploadFileDetails mocks base method.
func (m *MockStreamUseCase) UploadFileDetails(ctx context.Context, details request.FileDetails) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadFileDetails", ctx, details)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UploadFileDetails indicates an expected call of UploadFileDetails.
func (mr *MockStreamUseCaseMockRecorder) UploadFileDetails(ctx, details interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadFileDetails", reflect.TypeOf((*MockStreamUseCase)(nil).UploadFileDetails), ctx, details)
}
